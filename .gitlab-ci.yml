image: maven:3-eclipse-temurin-17

stages:
    - build
    - test
    - lint
    - deploy

.my-rules: &my-rules
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_MERGE_REQUEST_ID  # Execute jobs in merge request context
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
        - if: $CI_PIPELINE_SOURCE == "web"  # manual run via GitLab UI

workflow:
    <<: *my-rules

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    MAVEN_ARGS: "--no-transfer-progress -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"

cache:
    paths:
        - .m2/repository/
        - target/

################################################################################
# build

build:
    stage: build
    script:
        - mvn compile

################################################################################
# test

test:
    stage: test
    coverage: '/Instruction Coverage: \d+.\d+ %/'
    script:
        - mvn clean test
        - mvn jacoco:report
        - sh ./scripts/coverage.sh $JACOCO_CSV_LOCATION
        - sh ./scripts/coverage_metrics.sh $JACOCO_CSV_LOCATION >> metrics.txt
    variables:
        JACOCO_CSV_LOCATION: "$CI_PROJECT_DIR/target/site/jacoco/jacoco.csv"
    artifacts:
        paths:
            - target/site/jacoco/
        reports:
            metrics: metrics.txt
            junit:
                - target/surefire-reports/TEST-*.xml

show-coverage:
    stage: test
    needs:
        - test
    image: registry.gitlab.com/haynes/jacoco2cobertura:1.0.9
    script:
        - python /opt/cover2cover.py target/site/jacoco/jacoco.xml $CI_PROJECT_DIR/src/main/java/ > coverage.xml
    artifacts:
        reports:
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml

################################################################################
# lint

.lint: &lint-template
    stage: lint
    needs:
        - build
    rules:
        - if: '$CI_MERGE_REQUEST_TITLE =~ /^Draft:/'
          allow_failure: true
        - when: on_success
          allow_failure: false

check-licence-headers:
    <<: *lint-template
    script:
        - mvn license:check

check-formatting:
    <<: *lint-template
    script:
        - mvn spotless:check

checkstyle:
    <<: *lint-template
    script:
        - mvn checkstyle:checkstyle
        - cat target/checkstyle-result.xml | ./scripts/checkstyle_report.sh > checkstyle-report.json
    artifacts:
        when: always
        reports:
            codequality:
                - checkstyle-report.json

################################################################################
# deploy

deploy-gitlab:
  stage: deploy
  script:
    - 'mvn deploy -s ci_settings.xml'
  rules:
   - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
